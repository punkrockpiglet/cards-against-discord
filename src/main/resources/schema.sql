drop table if exists white_cards cascade;
drop table if exists black_cards cascade;
drop table if exists lobbies cascade;
drop table if exists games cascade;
drop table if exists players cascade;
drop table if exists player_cards cascade;
drop table if exists picked_cards cascade;

create table white_cards
(
    id   int generated by default as identity primary key,
    text text not null unique
);

create table black_cards
(
    id     int generated by default as identity primary key,
    blanks int  not null check (blanks > 0),
    text   text not null unique
);

create table lobbies
(
    id         int generated by default as identity primary key,
    owner_id   bigint   not null,
    players    bigint[] not null,
    guild_id   bigint   not null check (guild_id > 0),
    channel_id bigint   not null check (channel_id > 0),
    message_id bigint   not null check (message_id > 0),
    win_points int      not null default 10
);

create table games
(
    id               int generated by default as identity primary key,
    guild_id         bigint   not null check (guild_id > 0),
    channel_id       bigint   not null check (channel_id > 0),
    win_points       int      not null default 10,
    message_id       bigint,
    judge_id         bigint,
    black_card_id    int,
    used_white_cards int[]    not null,
    used_black_cards int[]    not null,
    joining_players  bigint[] not null,
    leaving_players  bigint[] not null
);

create table players
(
    id                     int generated by default as identity primary key,
    user_id                bigint not null,
    game_id                int    not null,
    selected_white_card_id int,
    score                  int default 0
);

create table player_cards
(
    id            int generated by default as identity,
    player_id     int not null,
    white_card_id int not null,

    primary key (player_id, white_card_id)
);

create table picked_cards
(
    id             int generated by default as identity,
    player_id      int not null,
    white_card_id  int not null,
    blank_position int not null default 0,

    primary key (player_id, white_card_id)
);

alter table games add constraint fk_black_card_id foreign key (black_card_id) references black_cards (id) on delete cascade ;

alter table players add constraint fk_game_id foreign key (game_id) references games (id) on delete cascade;
alter table players add constraint fk_selected_white_card_id foreign key (selected_white_card_id) references white_cards (id) on delete cascade;

alter table player_cards add constraint uc_player_white_card unique (player_id, white_card_id);
alter table player_cards add constraint fk_player_id foreign key (player_id) references players (id) on delete cascade;
alter table player_cards add constraint fk_white_card foreign key (white_card_id) references white_cards (id) on delete cascade;

alter table picked_cards add constraint fk_player_id foreign key (player_id) references players (id) on delete cascade;
alter table picked_cards add constraint fk_white_card foreign key (white_card_id) references white_cards (id) on delete cascade;